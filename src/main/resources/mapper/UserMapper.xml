<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhaoxi.aihelperbackend.mapper.UserMapper">
    <resultMap id="userResultMap" type="com.zhaoxi.aihelperbackend.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="mobile" column="mobile"/>
        <result property="avatar" column="avatar"/>
        <result property="status" column="status"/>
        <result property="enabled" column="enabled"/>
        <result property="accountNonExpired" column="account_non_expired"/>
        <result property="accountNonLocked" column="account_non_locked"/>
        <result property="credentialsNonExpired" column="credentials_non_expired"/>
        <result property="role" column="role"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <insert id="insert" parameterType="com.zhaoxi.aihelperbackend.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            username, 
            nickname,
            password, 
            email, 
            mobile,
            avatar, 
            status,
            enabled, 
            account_non_expired, 
            account_non_locked, 
            credentials_non_expired, 
            role, 
            created_at, 
            updated_at
        )
        VALUES (
            #{username}, 
            #{nickname}, 
            #{password}, 
            #{email}, 
            #{mobile},
            #{avatar}, 
            #{status},
            #{enabled}, 
            #{accountNonExpired}, 
            #{accountNonLocked}, 
            #{credentialsNonExpired}, 
            #{role}, 
            #{createdAt}, 
            #{updatedAt}
        )
    </insert>

    <select id="findByUsername" resultMap="userResultMap">
        SELECT * FROM user WHERE username = #{username}
    </select>

    <select id="findByEmail" resultMap="userResultMap">
        SELECT * FROM user WHERE email = #{email}
    </select>
    
    <select id="findByMobile" resultMap="userResultMap">
        SELECT * FROM user WHERE mobile = #{mobile}
    </select>

    <select id="findById" resultMap="userResultMap">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <select id="existsByUsername" resultType="int">
        SELECT COUNT(*) FROM user WHERE username = #{username}
    </select>

    <select id="existsByEmail" resultType="int">
        SELECT COUNT(*) FROM user WHERE email = #{email}
    </select>
    
    <select id="existsByMobile" resultType="int">
        SELECT COUNT(*) FROM user WHERE mobile = #{mobile}
    </select>

    <update id="update" parameterType="com.zhaoxi.aihelperbackend.entity.User">
        UPDATE user
        SET username = #{username},
            nickname = #{nickname},
            email = #{email},
            mobile = #{mobile},
            avatar = #{avatar},
            status = #{status},
            enabled = #{enabled},
            account_non_expired = #{accountNonExpired},
            account_non_locked = #{accountNonLocked},
            credentials_non_expired = #{credentialsNonExpired},
            role = #{role},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <update id="updatePassword">
        UPDATE user
        SET password = #{newPassword},
            updated_at = NOW()
        WHERE id = #{id}
    </update>
    
    <update id="updateStatus">
        UPDATE user
        SET status = #{status},
            updated_at = NOW()
        WHERE id = #{id}
    </update>
</mapper> 